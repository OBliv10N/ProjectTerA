#include <SFML/Graphics.hpp>
#include<time.h>
using namespace sf;

const int nfieldwidth = 12;
const int nfieldheight = 18;

int field[nfieldheight][nfieldwidth] = {};//ขนาดของเกม


struct point {
    int x, y;
}a[4], b[4];

int blocks[7][4] = {      //บล็อกค้าบไอ้ต้าว
    2,4,6,8, /*    .X
                   .X
                   .X
                   .X   */
    3,4,5,6,/*   ..
                   XX
                   XX
                   ..  */

    4,5,6,8,  /*   ..
                   .X
                   XX
                   .X     */
    3,5,6,7,  /*   ..
                   X.
                   XX
                   X.     */
    4,5,6,7, /* ..
                   .X
                   XX
                   X.    */
    3,6,7,8,  /*   ..
                   X.
                   XX
                   .X    */

    4,6,7,8 /*  ..
                   .X
                   .X
                   XX     */


};

int main()
{
    RenderWindow window(sf::VideoMode(1080, 720), "Play Game!");

    Texture t;
    t.loadFromFile("Image/tiles.png");

    Sprite s(t);
    s.setTextureRect(IntRect(0, 0, 18, 18));

    int m = 0; bool rotate = 0; double time = 0; double delay = 0.3;

    while (window.isOpen())
    {
        Event event;
        while (window.pollEvent(event))
        {
            if (event.type == Event::Closed)
                window.close();
            
            if (Keyboard::isKeyPressed(Keyboard::Up)) rotate = true;
            else if (Keyboard::isKeyPressed(Keyboard::Left)) m = -1;
            else if (Keyboard::isKeyPressed(Keyboard::Right)) m = 1;
            
           if (rotate) {
                point p = a[0];
                for (int i = 0; i < 4; i++) {
                    int x = a[i].y - p.y;
                    int y = a[i].x - p.x;
                    a[i].x = p.x - x;
                    a[i].y = p.y + y;
                }
            }
            

            // Move
            for (int i = 0; i < 4; i++) {
                a[i].x += m;
            }

            

        }

        int n = 2;
        if (a[0].x == 0)
        for (int i = 0; i < 4; i++) {
            a[i].x = blocks[n][i] % 2;
            a[i].y = blocks[n][i] / 2;
        }

        m = 0; rotate = 0;
        window.clear(Color::Green);

        for (int i = 0; i < 4; i++) {
            s.setPosition(a[i].x * 18, a[i].y * 18);
            window.draw(s);
        }

        window.display();
    }

    return 0;
}
